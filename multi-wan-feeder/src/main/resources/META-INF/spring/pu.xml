<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xmlns:os-events="http://www.openspaces.org/schema/events"
       xmlns:os-remoting="http://www.openspaces.org/schema/remoting"
       xmlns:os-sla="http://www.openspaces.org/schema/sla"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
       http://www.openspaces.org/schema/core http://www.openspaces.org/schema/10.1/core/openspaces-core.xsd
       http://www.openspaces.org/schema/events http://www.openspaces.org/schema/10.1/events/openspaces-events.xsd
       http://www.openspaces.org/schema/remoting http://www.openspaces.org/schema/10.1/remoting/openspaces-remoting.xsd
       http://www.openspaces.org/schema/sla http://www.openspaces.org/schema/10.1/sla/openspaces-sla.xsd">


    <!--
        Spring property configurer which allows us to use system properties (such as user.name).
    -->
    <bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
         <property name="properties">
            <props>
                <prop key="thread.count">1</prop>
            </props>
        </property>
    </bean>

    <context:component-scan base-package="com.gigaspaces.gigapro" />
    
    <!--
        Enables the usage of @GigaSpaceContext annotation based injection.
    -->
    <os-core:giga-space-context/>

    <!--
        A bean representing a space (an IJSpace implementation).

        Note, we perform a lookup on the space since we are working against a remote space.
    -->
    <os-core:space id="space" url="jini://*/*/${source.space}?locators=${source.host}:4174" />

    <!--
        OpenSpaces simplified space API built on top of IJSpace/JavaSpace.
    -->
    <os-core:giga-space id="sourceSpace" space="space"/>

    <task:executor id="executor" pool-size="${thread.count}" />
    <task:annotation-driven executor="executor"/>

    <!--
        The Data feeder bean, writing new Data objects to the space in a constant interval.
    -->
    <bean id="feeder" class="com.gigaspaces.gigapro.Feeder" depends-on="sourceSpace">
        <property name="rate" value="100"/>
        <property name="batchSize" value="100"/>
        <property name="objectCount" value="10000000"/>
    </bean>
    
    <bean id="feederInitializer" class="com.gigaspaces.gigapro.FeederInitializer">
        <constructor-arg name="count" value="${thread.count}"/>
    </bean>
    
</beans>
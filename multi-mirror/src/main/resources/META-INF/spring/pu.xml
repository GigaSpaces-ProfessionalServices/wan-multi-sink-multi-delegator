<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
       http://www.openspaces.org/schema/core http://www.openspaces.org/schema/10.1/core/openspaces-core.xsd">

    <bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties">
            <props>
                <prop key="db.host">10.8.1.63</prop>
                <prop key="db.port">1433</prop>
                <prop key="db.name">TestDB2</prop>
                <prop key="db.username">test</prop>
                <prop key="db.password">default1A</prop>
                <prop key="stats.interval">5000</prop>
            </props>
        </property>
    </bean>
    
    <context:component-scan base-package="com.gigaspaces.util.mirror.monitor" />

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>
        <property name="url" value="jdbc:sqlserver://${db.host}:${db.port};databaseName=${db.name};integratedSecurity=false"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <!--
        Hibernate SessionFactory bean. Uses the pooled data source to connect to the database.
    -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="${entities.package}" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.default_schema">dbo</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.SQLServer2008Dialect</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
            </props>
        </property>
    </bean>

    <!--
        An external data source that will be responsible for persisting changes done on the cluster that
        connects to this mirror using Hibernate.
    -->
    <!--  <bean id="hibernateSpaceSynchronizationEndpoint" class="org.openspaces.persistency.hibernate.DefaultHibernateSpaceSynchronizationEndpointFactoryBean">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean> -->
    
    <!--
        An extended Hibernate based data source that will be responsible for persisting changes done on the cluster that
        connects to this mirror with monitoring capabilities.
    -->
    <bean id="hibernateSpaceSynchronizationEndpoint" class="com.gigaspaces.util.mirror.monitor.Mirror" >
        <constructor-arg name="sessionFactory" ref="sessionFactory" />
        <!-- Disables DB calls to be used for mirror throughput measurement  -->
        <property name="debug" value="true" />
    </bean> 
   
    <!--
        The mirror space. Uses the Hibernate external data source. Persists changes done on the space partition that
        connects to it into the database using Hibernate.
        
        The count of deployed mirror PUs should be equal to partition primary instances count in the space.
        
        ${mirror.name} should meet a mirror name that is specified in the space 'cluster-config.mirror-service.url' setting.
        
        In current setup the following names are allowed:
            mirror-source<instance-id>, 'instance-id' varies from 1 to 3
            mirror-destination<instance-id>, 'instance-id' varies from 1 to 6  
    -->
    <os-core:space id="mirror" url="/./${mirror.name}" schema="mirror" space-sync-endpoint="hibernateSpaceSynchronizationEndpoint">
        <os-core:properties>
            <props>
                <prop key="space-config.mirror-service.cluster.name">${space.name}</prop>
                <prop key="space-config.mirror-service.cluster.partitions">${space.partitions}</prop>
                <prop key="space-config.mirror-service.cluster.backups-per-partition">${space.backups}</prop>
                <prop key="space-config.mirror-service.operation-grouping">group-by-replication-bulk</prop>
            </props>
        </os-core:properties>
    </os-core:space>
    
    <task:annotation-driven scheduler="scheduler"/>
    <task:scheduler id="scheduler" pool-size="1"/>
    
    <bean id="mirrorStats" class="com.gigaspaces.util.mirror.monitor.MirrorStats" >
         <constructor-arg name="mirrorName" value="${mirror.name}" />
    </bean>
    
    <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean" />

    <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="beans">
            <map>
                <entry key="bean:name=${mirror.name}" value-ref="mirrorStats" />
            </map>
        </property>
        <property name="server" ref="mbeanServer" />
    </bean>
</beans>